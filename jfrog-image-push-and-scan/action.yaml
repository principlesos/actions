# action.yaml
name: 'Push and scan build info'
description: 'Installs and uses jfrog CLI to push docker image and build info for previously built Docker image then scan it for vulnerabilities'
inputs:
  docker-fqin:
    description: 'Tag for the docker image'
    required: true
    default: ${DOCKER_FQIN}
  build-name:
    description: 'Name of the project - Typically set at environment level'
    required: true
    default: ${PROJECT_NAME}
  build-number:
    description: 'Build number for Jfrog indexing, use default value'
    required: true
    default: ${COMPUTED_TAG}
  branch-name:
    description: 'Branch name for identifying purposes, use default value'
    required: true
    default: ${SANITIZED_BRANCH_NAME}
  image-version:
    description: 'Semver for image'
    required: true
    default: ${IMAGE_VERSION}
  jf-token:
    description: 'Login token for Jfrog environemnet. Set via secret'
    required: true
  jf-tenant:
    description: 'Which docker environment to use. Set to standard secret'
    required: true
  jf-repo:
    description: 'Which docker repo to use. Set to standard secret'
    required: true
  skip-scan:
    description: 'Set to true to override scan step'
    required: true
    default: 'false'
runs:
  using: "composite"
  steps:
    - run: |
        echo "JFROG_CLI_BUILD_URL=https://github.com/${{ github.repository }}/commit/${{ github.sha }}/checks" >> $GITHUB_ENV
        echo "BUILD_INFO=$(echo ${{ inputs.branch-name }}-${{ inputs.image-version }}-${{ github.run_number }}-${{ github.sha }})" >> build_data.env
        echo "JFROG_CLI_BUILD_NAME=${PROJECT_NAME}" >> build_data.env
        echo "JFROG_CLI_OFFER_CONFIG='false'" >> build_data.env
        echo "JFROG_CLI_ENV_EXCLUDE='*password*;*secret*;*key*;*token*;JF_ARTIFACTORY_*'" >> build_data.env
        echo "JFROG_CLI_BUILD_NUMBER=$(echo ${{ inputs.branch-name }}-${{ inputs.image-version }}-${{ github.sha }})" >> build_data.env
        cat build_data.env >> $GITHUB_ENV
      shell: bash
    - run: |
        wget -qO - https://releases.jfrog.io/artifactory/api/gpg/key/public | sudo apt-key add -;
        echo "deb https://releases.jfrog.io/artifactory/jfrog-debs xenial contrib" | sudo tee -a /etc/apt/sources.list;
        sudo apt update;
        sudo apt install -y jfrog-cli;

        jfrog rt c import ${{ inputs.jf-token }} --interactive=false
        jfrog rt use ${{ inputs.jf-tenant }}
        jfrog rt dp ${{ inputs.docker-fqin }} ${{ inputs.jf-repo }} --build-name=${{ inputs.build-name }} --build-number=${{ inputs.build-number }}
        jfrog rt bp ${{ inputs.build-name }} ${{ inputs.build-number }}
        if [[ ${{ inputs.skip-scan }} == "true" ]]; then
          echo "Skipping scan request. Report can still be viewed in Jfrog. You wont be able to promote to prod without a passing scan"
        else
          jfrog rt bs ${{ inputs.build-name }} ${{ inputs.build-number }}
        fi
      shell: bash
